title pet theft
author Steve Tonneau
homepage www.stevetonneau.fr

color_palette gameboycolour

(a 2-player infiltration game.
player 1 is a spy and has to reach one objective only he knows of.
player 2 controls 3 soldiers and must prevent him from reaching its objective.
Player 1 is invisible when not in sight from players)


========
OBJECTS
========


(crappy state definition for players taking turns)
BackgroundSpy (B)
darkgray

BackgroundSoldier (D)
darkgray

BackgroundSoldier2 (F)
darkgray

BackgroundSoldier3 (H)
darkgray
(end crappy state definition for players taking turns)

(player 2 controls 3 soldiers in turn)
soldier
green
.000.
.000.
00000
.000.
.0.0.

soldier2
yellow
.000.
.000.
00000
.000.
.0.0.

soldier3
blue
.000.
.000.
00000
.000.
.0.0.
(end player 2)

(player 1 controls 1 spy with visible and invisible states)
spyvisible
red
.000.
.000.
00000
.000.
.0.0.


spyalmostvisible
blue
.000.
.000.
00000
.000.
.0.0.

spy
pink
.....
..0..
.....
.....
.....
(end player 1)


(turn marker)
turnSoldier1
green
.000.
.000.
00000
.000.
.0.0.

turnsoldier2
yellow
.000.
.000.
00000
.000.
.0.0.

turnsoldier3
blue
.000.
.000.
00000
.000.
.0.0.

turnspy
red
.000.
.000.
00000
.000.
.0.0.
(end turn marker)

(player 1 can create doppelganger)
doppelganger
black
.....
..0..
.....
.....
.....

doppelgangervisible
red
.000.
.000.
00000
.000.
.0.0.


(Crates can be pushed by anybody)
Crate
darkbrown brown
00000
01110
01110
01110
00000

(I need 6 sprites to randomly chose one of three objectives)
(bird)
obj1
yellow blue black
...0.
..010
0000.
.00..
.2...

(cat)
obj2
orange brown darkgreen black
0...0
11111
12121
11311
.111.

(horse)
obj3
orange brown
..111
..100
1000.
1000.
.0.0.


(true objectives)
wobj1
yellow blue black
...0.
..010
0000.
.00..
.2...


wobj2
(white red black
.....
010..
11100
01000
.2.2.)
orange brown darkgreen black
0...0
11111
12121
11311
.111.

wobj3
orange brown
..111
..100
1000.
1000.
.0.0.


(temporary marker used for object selection)
objmarker
darkgray

statemarker
darkgray

(doppelganger can only be created once)
dopcreated
blue

wall
black

(marker for objective selected)
x
darkgrey

(wincond to overcome no bug with background)
wincond
darkgray

(vision markers)
wallinpath
darkgrey

spysafe
darkgrey
(end vision markers)

=======
LEGEND
=======
. = BackgroundSpy
Background =  BackgroundSoldier or BackgroundSoldier2 or BackgroundSoldier3 or BackgroundSpy
obj = obj1 or obj2 or obj3
turn = turnspy or turnSoldier1 or turnSoldier2 or turnSoldier3
wobj = wobj1 or wobj2 or wobj3
objective = wobj or obj
player = soldier or soldier2 or soldier3 or spy or spyvisible or spyalmostvisible
agent = spy or spyvisible or spyalmostvisible
dop = doppelganger or  doppelgangervisible
sold = soldier or soldier2 or soldier3
Obstacle = obj or wobj or crate or doppelganger or wall
s = soldier
d = soldier2
f = soldier3
h = spyvisible
i = obj1
o = obj2
p = obj3
c = Crate
# = wall
t = turnspy

=========
SOUNDS
=========
sfx0 64723308 (cat)
Sfx1 81300709 (birdsound for bird target)
Sfx2 87489308 (Horse !!!)
Sfx3 833702   (spy is dead)
Sfx4 95210703 (spy wins)
Sfx5 41014502 (spy hits wall)
Sfx6 42778708 (player 1 spotted)

================
COLLISIONLAYERS
================
Background
x, dop, wincond
statemarker, objmarker
turn, wallinpath, spysafe
dopcreated
player, Crate, wall, objective

======
RULES
======

[wincond] -> win


(Action for creating doppelganger)
[Action agent no dopcreated no objective BackgroundSpy] -> [agent dopcreated doppelganger BackgroundSpy]
[Action agent dopcreated  BackgroundSpy] -> cancel
([no Player objmarker] -> [doppelganger])

(first choose one random objective to make it target)
(set other objectives as fake objectives)
(remove marker from objective and make it real)
random[obj no x] -> [obj objmarker]
[obj1 no objmarker] -> [obj1 x]
[obj2 no objmarker] -> [obj2 x]
[obj3 no objmarker] -> [obj3 x]
[obj1 objmarker] -> [wobj1] Sfx1
[obj2 objmarker] -> [wobj2] Sfx0
[obj3 objmarker] -> [wobj3] Sfx2


(crappy rules to prevent players from acting when it is not their turn)
[player] -> [player statemarker]
[soldier statemarker | ... | BackgroundSoldier] -> [soldier | ... | BackgroundSoldier]
[soldier2 statemarker | ... | BackgroundSoldier2] -> [soldier2 | ... | BackgroundSoldier2]
[soldier3 statemarker | ... | BackgroundSoldier3] -> [soldier3 | ... | BackgroundSoldier3]
[agent statemarker | ... | BackgroundSpy] -> [agent | ... | BackgroundSpy]
[> player statemarker] -> [player statemarker]
[> agent dopcreated] -> [> agent > dopcreated]
(end of crappy rules to prevent players from acting when it is not their turn)

(soldier can not go over obstacles)
([> sold | objective] -> [sold | objective])
(actual game rules !)
(push crates)
[> Player | Crate] -> [> Player | > Crate]
[> crate | Crate] -> [> crate | > Crate] 
[> crate | dop] -> [crate | dop] 
([> crate | objective] -> [crate | objective] )

(sound to inform spy he hit a wall)
[> agent BackgroundSpy | wall] -> Sfx5

(soldier kills doppelganger by walking on it)
[> sold | dop] -> [> sold |]

(win if objective reached / spy is dead)
[> sold | agent] -> [sold | wincond] sfx3 message "player 2 wins!"
[> agent | wobj] -> [ agent | wincond wobj ] Sfx4  message "player 1 wins!"

[statemarker] -> []

(Spy detection)
late [spyalmostvisible] -> [spy] 
late [spyvisible] -> [spyalmostvisible] 
late [doppelgangervisible] -> [doppelganger]

(marking obstacles in path as in the direction, then raycasting
from player in opposite direction. If no obstacle is tagged then the spy is visible)

(we actually have to repeat that for each soldier ...)
(Soldier)
late LEFT [soldier |...| Obstacle no wallinpath] -> [soldier |...| Obstacle wallinpath]
late RIGHT [dop |...| Obstacle wallinpath] -> [dop spysafe |...| Obstacle wallinpath]
late LEFT [soldier | ... | dop no spysafe] -> [soldier | ... | doppelgangervisible] SFX0
late [wallinpath] -> []
late [spysafe] -> []

late UP [soldier |...| Obstacle no wallinpath] -> [soldier |...| Obstacle wallinpath]
late DOWN [dop |...| Obstacle wallinpath] -> [dop spysafe |...| Obstacle wallinpath]
late UP [soldier | ... | dop no spysafe] -> [soldier | ... | doppelgangervisible] SFX0
late [wallinpath] -> []
late [spysafe] -> []

late DOWN [soldier |...| Obstacle no wallinpath] -> [soldier |...| Obstacle wallinpath]
late UP [dop |...| Obstacle wallinpath] -> [dop spysafe |...| Obstacle wallinpath]
late DOWN [soldier | ... | dop no spysafe] -> [soldier | ... | doppelgangervisible] SFX0
late [wallinpath] -> []
late [spysafe] -> []

late RIGHT [soldier |...| Obstacle no wallinpath] -> [soldier |...| Obstacle wallinpath]
late LEFT [dop |...| Obstacle wallinpath] -> [dop spysafe |...| Obstacle wallinpath]
late RIGHT [soldier | ... | dop no spysafe] -> [soldier | ... | doppelgangervisible] SFX0
late [wallinpath] -> []
late [spysafe] -> []

late LEFT [soldier |...| Obstacle no wallinpath] -> [soldier |...| Obstacle wallinpath]
late RIGHT [agent |...| Obstacle wallinpath] -> [agent spysafe |...| Obstacle wallinpath]
late LEFT [soldier | ... | agent no spysafe] -> [soldier | ... | spyvisible] Sfx6
late [wallinpath] -> []
late [spysafe] -> []

late UP [soldier |...| Obstacle no wallinpath] -> [soldier |...| Obstacle wallinpath]
late DOWN [agent |...| Obstacle wallinpath] -> [agent spysafe |...| Obstacle wallinpath]
late UP [soldier | ... | agent no spysafe] -> [soldier | ... | spyvisible] Sfx6
late [wallinpath] -> []
late [spysafe] -> []

late DOWN [soldier |...| Obstacle no wallinpath] -> [soldier |...| Obstacle wallinpath]
late UP [agent |...| Obstacle wallinpath] -> [agent spysafe |...| Obstacle wallinpath]
late DOWN [soldier | ... | agent no spysafe] -> [soldier | ... | spyvisible] Sfx6
late [wallinpath] -> []
late [spysafe] -> []

late RIGHT [soldier |...| Obstacle no wallinpath] -> [soldier |...| Obstacle wallinpath]
late LEFT [agent |...| Obstacle wallinpath] -> [agent spysafe |...| Obstacle wallinpath]
late RIGHT [soldier | ... | agent no spysafe] -> [soldier | ... | spyvisible] Sfx6
late [wallinpath] -> []
late [spysafe] -> []
(end soldier)

(Soldier2)
late LEFT [soldier2 |...| Obstacle no wallinpath] -> [soldier2 |...| Obstacle wallinpath]
late RIGHT [dop |...| Obstacle wallinpath] -> [dop spysafe |...| Obstacle wallinpath]
late LEFT [soldier2 | ... | dop no spysafe] -> [soldier2 | ... | doppelgangervisible] SFX0
late [wallinpath] -> []
late [spysafe] -> []

late UP [soldier2 |...| Obstacle no wallinpath] -> [soldier2 |...| Obstacle wallinpath]
late DOWN [dop |...| Obstacle wallinpath] -> [dop spysafe |...| Obstacle wallinpath]
late UP [soldier2 | ... | dop no spysafe] -> [soldier2 | ... | doppelgangervisible] SFX0
late [wallinpath] -> []
late [spysafe] -> []

late DOWN [soldier2 |...| Obstacle no wallinpath] -> [soldier2 |...| Obstacle wallinpath]
late UP [dop |...| Obstacle wallinpath] -> [dop spysafe |...| Obstacle wallinpath]
late DOWN [soldier2 | ... | dop no spysafe] -> [soldier2 | ... | doppelgangervisible] SFX0
late [wallinpath] -> []
late [spysafe] -> []

late RIGHT [soldier2 |...| Obstacle no wallinpath] -> [soldier2 |...| Obstacle wallinpath]
late LEFT [dop |...| Obstacle wallinpath] -> [dop spysafe |...| Obstacle wallinpath]
late RIGHT [soldier2 | ... | dop no spysafe] -> [soldier2 | ... | doppelgangervisible] SFX0
late [wallinpath] -> []
late [spysafe] -> []

late LEFT [soldier2 |...| Obstacle no wallinpath] -> [soldier2 |...| Obstacle wallinpath]
late RIGHT [agent |...| Obstacle wallinpath] -> [agent spysafe |...| Obstacle wallinpath]
late LEFT [soldier2 | ... | agent no spysafe] -> [soldier2 | ... | spyvisible] Sfx6
late [wallinpath] -> []
late [spysafe] -> []

late UP [soldier2 |...| Obstacle no wallinpath] -> [soldier2 |...| Obstacle wallinpath]
late DOWN [agent |...| Obstacle wallinpath] -> [agent spysafe |...| Obstacle wallinpath]
late UP [soldier2 | ... | agent no spysafe] -> [soldier2 | ... | spyvisible] Sfx6
late [wallinpath] -> []
late [spysafe] -> []

late DOWN [soldier2 |...| Obstacle no wallinpath] -> [soldier2 |...| Obstacle wallinpath]
late UP [agent |...| Obstacle wallinpath] -> [agent spysafe |...| Obstacle wallinpath]
late DOWN [soldier2 | ... | agent no spysafe] -> [soldier2 | ... | spyvisible] Sfx6
late [wallinpath] -> []
late [spysafe] -> []

late RIGHT [soldier2 |...| Obstacle no wallinpath] -> [soldier2 |...| Obstacle wallinpath]
late LEFT [agent |...| Obstacle wallinpath] -> [agent spysafe |...| Obstacle wallinpath]
late RIGHT [soldier2 | ... | agent no spysafe] -> [soldier2 | ... | spyvisible] Sfx6
late [wallinpath] -> []
late [spysafe] -> []
(end soldier2)

(Soldier3)
late LEFT [soldier3 |...| Obstacle no wallinpath] -> [soldier3 |...| Obstacle wallinpath]
late RIGHT [dop |...| Obstacle wallinpath] -> [dop spysafe |...| Obstacle wallinpath]
late LEFT [soldier3 | ... | dop no spysafe] -> [soldier3 | ... | doppelgangervisible] SFX0
late [wallinpath] -> []
late [spysafe] -> []

late UP [soldier3 |...| Obstacle no wallinpath] -> [soldier3 |...| Obstacle wallinpath]
late DOWN [dop |...| Obstacle wallinpath] -> [dop spysafe |...| Obstacle wallinpath]
late UP [soldier3 | ... | dop no spysafe] -> [soldier3 | ... | doppelgangervisible] SFX0
late [wallinpath] -> []
late [spysafe] -> []

late DOWN [soldier3 |...| Obstacle no wallinpath] -> [soldier3 |...| Obstacle wallinpath]
late UP [dop |...| Obstacle wallinpath] -> [dop spysafe |...| Obstacle wallinpath]
late DOWN [soldier3 | ... | dop no spysafe] -> [soldier3 | ... | doppelgangervisible] SFX0
late [wallinpath] -> []
late [spysafe] -> []

late RIGHT [soldier3 |...| Obstacle no wallinpath] -> [soldier3 |...| Obstacle wallinpath]
late LEFT [dop |...| Obstacle wallinpath] -> [dop spysafe |...| Obstacle wallinpath]
late RIGHT [soldier3 | ... | dop no spysafe] -> [soldier3 | ... | doppelgangervisible] SFX0
late [wallinpath] -> []
late [spysafe] -> []

late LEFT [soldier3 |...| Obstacle no wallinpath] -> [soldier3 |...| Obstacle wallinpath]
late RIGHT [agent |...| Obstacle wallinpath] -> [agent spysafe |...| Obstacle wallinpath]
late LEFT [soldier3 | ... | agent no spysafe] -> [soldier3 | ... | spyvisible] Sfx6
late [wallinpath] -> []
late [spysafe] -> []

late UP [soldier3 |...| Obstacle no wallinpath] -> [soldier3 |...| Obstacle wallinpath]
late DOWN [agent |...| Obstacle wallinpath] -> [agent spysafe |...| Obstacle wallinpath]
late UP [soldier3 | ... | agent no spysafe] -> [soldier3 | ... | spyvisible] Sfx6
late [wallinpath] -> []
late [spysafe] -> []

late DOWN [soldier3 |...| Obstacle no wallinpath] -> [soldier3 |...| Obstacle wallinpath]
late UP [agent |...| Obstacle wallinpath] -> [agent spysafe |...| Obstacle wallinpath]
late DOWN [soldier3 | ... | agent no spysafe] -> [soldier3 | ... | spyvisible] Sfx6
late [wallinpath] -> []
late [spysafe] -> []

late RIGHT [soldier3 |...| Obstacle no wallinpath] -> [soldier3 |...| Obstacle wallinpath]
late LEFT [agent |...| Obstacle wallinpath] -> [agent spysafe |...| Obstacle wallinpath]
late RIGHT [soldier3 | ... | agent no spysafe] -> [soldier3 | ... | spyvisible] Sfx6
late [wallinpath] -> []
late [spysafe] -> []
(end soldier3)

(Player turn handling)
	(turn marker)
late[turn] -> [turn statemarker]
late[turnspy statemarker] -> [turnSoldier1]
late[turnSoldier1 statemarker] -> [turnSoldier2]
late[turnSoldier2 statemarker] -> [turnSoldier3]
late[turnSoldier3 statemarker] -> [turnspy]
late[statemarker] -> []
	(end turn marker)

	(marking states to only perform player turn switching once)
late[Background] -> [Background statemarker]
late[BackgroundSpy statemarker] -> [BackgroundSoldier]
late[BackgroundSoldier statemarker] -> [BackgroundSoldier2]
late[BackgroundSoldier2 statemarker] -> [BackgroundSoldier3]
late[BackgroundSoldier3 statemarker] -> [BackgroundSpy]
late[statemarker] -> []
(end Player turn  handling)
==============
WINCONDITIONS
==============
Some wincond

=======
LEVELS
=======

################t
#.i...........#
#.......d.....#
#....c.......#
#..f....s..#
#.......c...#
#....#....h..#
#.p..........#
#...c.........#
#.......o.....#
#.............#
#.............#
###############

